{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Validator.umd.min.js","webpack:///webpack/bootstrap afe4f9a3ea56cd658e66","webpack:///./src/Validator.js","webpack:///./src/Messages.js","webpack:///./src/Replacers.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Messages","_Messages2","_Replacers","_Replacers2","Validator","data","rules","customMessages","arguments","undefined","parseRules","errors","rule","implicitRules","indexOf","name","getRule","rulesToCheck","a","filter","item","Array","isArray","b","params","count","Error","self","arr","forEach","push","parseItemRules","split","ruleAndArgs","trim","args","titleCase","str","delimiter","map","toUpperCase","slice","toLowerCase","join","replace","allValid","isValid","validate","message","getErrorMsg","msg","snakeCase","getMessage","doReplacements","type","getDataType","hasRule","numericRules","replacer","apply","passes","error","method","getValue","console","hasData","validateRequired","names","result","allFailingRequired","anyFailingRequired","requireParameterCount","toString","values","re","RegExp","test","validateMatch","acceptable","validateSame","other","validateNumeric","len","getSize","size","hasNumeric","isNaN","parseFloat","arrayDiff","arr1","arr2","diff","validateIn","segments","validateBetween","Date","date","validateDate","parse","JSON","err","get","_defineProperty","_accepted$active_url$","accepted","active_url","after","alpha","alpha_dash","alpha_num","array","before","between","confirmed","countbetween","countmax","countmin","date_between","date_format","different","digits","digits_between","email","integer","exists","greater_than","less_than","image","in","numeric","file","string","Replacers","attr"],"mappings":"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","file":"Validator.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Validator\"] = factory();\n\telse\n\t\troot[\"Validator\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Validator\"] = factory();\n\telse\n\t\troot[\"Validator\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Messages = __webpack_require__(1);\n\t\n\tvar _Messages2 = _interopRequireDefault(_Messages);\n\t\n\tvar _Replacers = __webpack_require__(2);\n\t\n\tvar _Replacers2 = _interopRequireDefault(_Replacers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Validator = function () {\n\t    function Validator(data, rules) {\n\t        var customMessages = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\t\n\t        _classCallCheck(this, Validator);\n\t\n\t        this.data = data;\n\t        this.rules = this.parseRules(rules);\n\t        this.errors = [];\n\t        this.customMessages = customMessages;\n\t    }\n\t\n\t    _createClass(Validator, [{\n\t        key: 'isImplicit',\n\t        value: function isImplicit(rule) {\n\t            return this.implicitRules.indexOf(rule) > -1;\n\t        }\n\t    }, {\n\t        key: 'hasData',\n\t        value: function hasData(name) {\n\t            return typeof this.data[name] !== 'undefined';\n\t        }\n\t    }, {\n\t        key: 'hasRule',\n\t        value: function hasRule(name, rules) {\n\t            return this.getRule(name, rules) !== null;\n\t        }\n\t    }, {\n\t        key: 'getRule',\n\t        value: function getRule(name, rulesToCheck) {\n\t            var a = this.rules.filter(function (item) {\n\t                return item.name === name;\n\t            });\n\t\n\t            if (a.length === 0) {\n\t                return null;\n\t            } else {\n\t                a = a[0];\n\t            }\n\t\n\t            if (!Array.isArray(rulesToCheck)) {\n\t                rulesToCheck = [rulesToCheck];\n\t            }\n\t\n\t            var b = a.rules.filter(function (rule) {\n\t                return rulesToCheck.indexOf(rule.name) >= 0;\n\t            });\n\t\n\t            return b.length === 0 ? null : [b[0].name, b[0].params];\n\t        }\n\t    }, {\n\t        key: 'requireParameterCount',\n\t        value: function requireParameterCount(count, params, rule) {\n\t            if (params.length < count) {\n\t                throw new Error('Validation rule ' + rule + ' requires at least ' + count + ' parameters');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'parseRules',\n\t        value: function parseRules(rules) {\n\t            var self = this;\n\t            var arr = [];\n\t\n\t            rules.forEach(function (item) {\n\t                arr.push({\n\t                    name: item.name,\n\t                    rules: self.parseItemRules(item.rules)\n\t                });\n\t            });\n\t\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: 'parseItemRules',\n\t        value: function parseItemRules(rule) {\n\t            var self = this;\n\t            var arr = [];\n\t\n\t            rule.split('|').forEach(function (ruleAndArgs) {\n\t                if (ruleAndArgs.trim()) {\n\t                    var args = ruleAndArgs.split(':');\n\t                    arr.push({\n\t                        name: self.titleCase(args[0], '_'),\n\t                        params: args[1] ? args[1].split(',') : []\n\t                    });\n\t                }\n\t            });\n\t\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: 'titleCase',\n\t        value: function titleCase(str, delimiter) {\n\t            delimiter = delimiter || ' ';\n\t            return str.split(delimiter).map(function (item) {\n\t                return item[0].toUpperCase() + item.slice(1).toLowerCase();\n\t            }).join('');\n\t        }\n\t    }, {\n\t        key: 'snakeCase',\n\t        value: function snakeCase(str, delimiter) {\n\t            delimiter = delimiter || '_';\n\t            return str.replace(/((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))(?=[A-Z])/g, '$1' + delimiter).toLowerCase();\n\t        }\n\t    }, {\n\t        key: 'getValue',\n\t        value: function getValue(name) {\n\t            if (typeof this.data[name] === 'undefined') {\n\t                return '';\n\t            }\n\t\n\t            return this.data[name];\n\t        }\n\t    }, {\n\t        key: 'passes',\n\t        value: function passes() {\n\t            var self = this;\n\t            var allValid = true;\n\t            this.errors = [];\n\t\n\t            this.rules.forEach(function (item) {\n\t                var name = item.name.toLowerCase();\n\t                item.rules.forEach(function (rule) {\n\t                    var isValid = self.validate(name, rule);\n\t                    allValid = allValid && isValid;\n\t\n\t                    if (!isValid) {\n\t                        // console.log(rule.name, rule.params + '** invalid')\n\t                        self.errors.push({\n\t                            name: name,\n\t                            rule: rule.name,\n\t                            message: self.getErrorMsg(name, rule)\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t\n\t            return allValid;\n\t        }\n\t    }, {\n\t        key: 'getErrorMsg',\n\t        value: function getErrorMsg(name, rule) {\n\t            var key = this.snakeCase(rule.name);\n\t            var msg = this.getMessage(name, rule);\n\t\n\t            return this.doReplacements(msg, name, rule);\n\t        }\n\t    }, {\n\t        key: 'getMessage',\n\t        value: function getMessage(name, rule) {\n\t            var key = this.snakeCase(rule.name);\n\t            var msg = this.customMessages[name + '.' + key];\n\t\n\t            if (typeof msg !== 'undefined') {\n\t                return msg;\n\t            }\n\t\n\t            // message might has sub-rule\n\t            if ((typeof msg === 'undefined' ? 'undefined' : _typeof(msg)) === 'object') {\n\t                var type = this.getDataType(name);\n\t                msg = _Messages2.default[key][type];\n\t            }\n\t\n\t            return typeof msg === 'undefined' ? '' : msg;\n\t        }\n\t    }, {\n\t        key: 'getDataType',\n\t        value: function getDataType(name) {\n\t            if (this.hasRule(name, this.numericRules)) {\n\t                return 'numeric';\n\t            } else if (this.hasRule(name, ['Array'])) {\n\t                return 'array';\n\t            }\n\t            /* SKIP file type */\n\t\n\t            return 'string';\n\t        }\n\t    }, {\n\t        key: 'doReplacements',\n\t        value: function doReplacements(msg, name, rule) {\n\t            if (msg.trim() === '') {\n\t                return '';\n\t            }\n\t\n\t            msg = msg.replace(':ATTR', name.toUpperCase()).replace(':Attr', this.titleCase(name)).replace(':attr', name);\n\t\n\t            // call replacer\n\t            var replacer = _Replacers2.default['replace' + rule.name];\n\t            if (typeof replacer === 'function') {\n\t                msg = replacer.apply(_Replacers2.default, [msg, name, rule.name, rule.params]);\n\t            } else {\n\t                throw new Error(replacer + ' function does not exist.');\n\t            }\n\t\n\t            return msg;\n\t        }\n\t    }, {\n\t        key: 'fails',\n\t        value: function fails() {\n\t            return !this.passes();\n\t        }\n\t    }, {\n\t        key: 'hasError',\n\t        value: function hasError() {\n\t            var name = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t            if (name === null) {\n\t                return this.errors.length > 0;\n\t            }\n\t\n\t            var errors = this.errors.filter(function (error) {\n\t                return error.name === name.toLowerCase();\n\t            });\n\t\n\t            return errors.length > 0;\n\t        }\n\t    }, {\n\t        key: 'getErrors',\n\t        value: function getErrors() {\n\t            return this.errors;\n\t        }\n\t    }, {\n\t        key: 'validate',\n\t        value: function validate(name, rule) {\n\t            var method = this['validate' + rule.name];\n\t            var value = this.getValue(name);\n\t\n\t            if (typeof method === 'function') {\n\t                return method.apply(this, [name, value, rule.params]);\n\t            } else {\n\t                console.error('\"' + rule.name + '\" validation rule does not exist!');\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /** Validation Rules **/\n\t\n\t    }, {\n\t        key: 'validateRequired',\n\t        value: function validateRequired(name, value, params) {\n\t            if (value === null) {\n\t                return false;\n\t            } else if (typeof value === 'string' && value.trim() === '') {\n\t                return false;\n\t            } else if (Array.isArray(value) && value.length < 1) {\n\t                return false;\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validatePresent',\n\t        value: function validatePresent(name, value, params) {\n\t            return typeof this.data[name] !== 'undefined';\n\t        }\n\t    }, {\n\t        key: 'validateFilled',\n\t        value: function validateFilled(name, value) {\n\t            if (this.hasData(name)) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'anyFailingRequired',\n\t        value: function anyFailingRequired(names) {\n\t            var self = this;\n\t            var result = false;\n\t\n\t            names.forEach(function (name) {\n\t                if (!self.validateRequired(name, self.getValue(name))) {\n\t                    result = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            return result;\n\t        }\n\t    }, {\n\t        key: 'allFailingRequired',\n\t        value: function allFailingRequired(names) {\n\t            var self = this;\n\t            var result = true;\n\t\n\t            names.forEach(function (name) {\n\t                if (self.validateRequired(name, self.getValue(name))) {\n\t                    result = false;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            return result;\n\t        }\n\t    }, {\n\t        key: 'validateRequiredWith',\n\t        value: function validateRequiredWith(name, value, params) {\n\t            if (!this.allFailingRequired(params)) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validateRequiredWithAll',\n\t        value: function validateRequiredWithAll(name, value, params) {\n\t            if (!this.anyFailingRequired(params)) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validateRequiredWithout',\n\t        value: function validateRequiredWithout(name, value, params) {\n\t            if (this.anyFailingRequired(params)) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validateRequiredWithoutAll',\n\t        value: function validateRequiredWithoutAll(name, value, params) {\n\t            if (this.allFailingRequired(params)) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validateRequiredIf',\n\t        value: function validateRequiredIf(name, value, params) {\n\t            this.requireParameterCount(2, params, 'required_if');\n\t\n\t            var data = this.getValue(params[0]);\n\t            if (typeof data === 'boolean') {\n\t                data = data.toString();\n\t            }\n\t\n\t            var values = params.slice(1);\n\t\n\t            if (values.indexOf(data) >= 0) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validateRequiredUnless',\n\t        value: function validateRequiredUnless(name, value, params) {\n\t            this.requireParameterCount(2, params, 'required_unless');\n\t\n\t            var data = this.getValue(params[0]);\n\t\n\t            var values = params.slice(1);\n\t\n\t            if (values.indexOf(data) < 0) {\n\t                return this.validateRequired(name, value);\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'getPresentCount',\n\t        value: function getPresentCount(names) {\n\t            var self = this;\n\t            var count = 0;\n\t\n\t            names.forEach(function (name) {\n\t                if (typeof self.data[name] !== 'undefined') {\n\t                    count++;\n\t                }\n\t            });\n\t\n\t            return count;\n\t        }\n\t    }, {\n\t        key: 'validateMatch',\n\t        value: function validateMatch(name, value, params) {\n\t            if (!(params instanceof Array)) {\n\t                params = [params];\n\t            }\n\t\n\t            if (!(value instanceof Array)) {\n\t                value = [value];\n\t            }\n\t\n\t            var re = params[0];\n\t\n\t            if (!(re instanceof RegExp)) {\n\t                re = re.split('/');\n\t                re = new RegExp(re[1], re[2]);\n\t            }\n\t\n\t            return re.test(value);\n\t        }\n\t    }, {\n\t        key: 'validateRegex',\n\t        value: function validateRegex(name, value, params) {\n\t            return this.validateMatch(name, value, params);\n\t        }\n\t    }, {\n\t        key: 'validateAccepted',\n\t        value: function validateAccepted(name, value) {\n\t            var acceptable = ['yes', 'on', '1', 1, true, 'true'];\n\t\n\t            return this.validateRequired(name, value) && acceptable.indexOf(value) >= 0;\n\t        }\n\t    }, {\n\t        key: 'validateArray',\n\t        value: function validateArray(name, value) {\n\t            if (typeof this.data[name] === 'undefined') {\n\t                return true;\n\t            }\n\t\n\t            return value === null || Array.isArray(value);\n\t        }\n\t    }, {\n\t        key: 'validateConfirmed',\n\t        value: function validateConfirmed(name, value) {\n\t            return this.validateSame(name, value, [name + '_confirmation']);\n\t        }\n\t    }, {\n\t        key: 'validateSame',\n\t        value: function validateSame(name, value, params) {\n\t            this.requireParameterCount(1, params, 'same');\n\t\n\t            var other = this.data[params[0]];\n\t\n\t            return typeof other !== 'undefined' && value === other;\n\t        }\n\t    }, {\n\t        key: 'validateDifferent',\n\t        value: function validateDifferent(name, value, params) {\n\t            this.requireParameterCount(1, params, 'different');\n\t\n\t            var other = this.data[params[0]];\n\t\n\t            return typeof other !== 'undefined' && value !== other;\n\t        }\n\t    }, {\n\t        key: 'validateDigits',\n\t        value: function validateDigits(name, value, params) {\n\t            this.requireParameterCount(1, params, 'digits');\n\t\n\t            return this.validateNumeric(name, value) && value.toString().length == params[0];\n\t        }\n\t    }, {\n\t        key: 'validateDigitsBetween',\n\t        value: function validateDigitsBetween(name, value, params) {\n\t            this.requireParameterCount(2, params, 'digits_between');\n\t\n\t            var len = value.toString().length;\n\t\n\t            return this.validateNumeric(name, value) && len >= params[0] && len <= params[1];\n\t        }\n\t    }, {\n\t        key: 'validateSize',\n\t        value: function validateSize(name, value, params) {\n\t            this.requireParameterCount(1, params, 'size');\n\t\n\t            return this.getSize(name, value) == params[0];\n\t        }\n\t    }, {\n\t        key: 'validateBetween',\n\t        value: function validateBetween(name, value, params) {\n\t            this.requireParameterCount(2, params, 'between');\n\t\n\t            var size = this.getSize(name, value);\n\t\n\t            return size >= params[0] && size <= params[1];\n\t        }\n\t    }, {\n\t        key: 'validateMin',\n\t        value: function validateMin(name, value, params) {\n\t            this.requireParameterCount(1, params, 'min');\n\t\n\t            return this.getSize(name, value) >= params[0];\n\t        }\n\t    }, {\n\t        key: 'validateMax',\n\t        value: function validateMax(name, value, params) {\n\t            this.requireParameterCount(1, params, 'max');\n\t\n\t            return this.getSize(name, value) <= params[0];\n\t        }\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize(name, value) {\n\t            var hasNumeric = this.hasRule(name, this.numericRules);\n\t\n\t            if (hasNumeric && !isNaN(parseFloat(value))) {\n\t                return parseFloat(value);\n\t            }\n\t\n\t            // for array and string\n\t            return value.length;\n\t        }\n\t    }, {\n\t        key: 'validateIn',\n\t        value: function validateIn(name, value, params) {\n\t            if (Array.isArray(value) && this.hasRule(name, 'Array')) {\n\t                var arr = this.arrayDiff(value, params);\n\t                return arr.length === 0;\n\t            }\n\t\n\t            return params.indexOf(value) >= 0;\n\t        }\n\t    }, {\n\t        key: 'arrayDiff',\n\t        value: function arrayDiff(arr1, arr2) {\n\t            var diff = [];\n\t            arr1.forEach(function (item) {\n\t                if (arr2.indexOf(item) < 0) {\n\t                    diff.push(item);\n\t                }\n\t            });\n\t            return diff;\n\t        }\n\t    }, {\n\t        key: 'validateNotIn',\n\t        value: function validateNotIn(name, value, params) {\n\t            this.requireParameterCount(1, params, 'not_in');\n\t\n\t            return !this.validateIn(name, value, params);\n\t        }\n\t    }, {\n\t        key: 'validateNumeric',\n\t        value: function validateNumeric(name, value) {\n\t            return this.validateMatch(name, value, /^-?\\d+(\\.\\d*)?$/);\n\t        }\n\t    }, {\n\t        key: 'validateInteger',\n\t        value: function validateInteger(name, value) {\n\t            return this.validateMatch(name, value, /^-?\\d+$/);\n\t        }\n\t    }, {\n\t        key: 'validateString',\n\t        value: function validateString(name, value) {\n\t            if (!this.hasData(name)) {\n\t                return true;\n\t            }\n\t\n\t            return value === null || typeof value === 'string';\n\t        }\n\t    }, {\n\t        key: 'validateEmail',\n\t        value: function validateEmail(name, value) {\n\t            return this.validateMatch(name, value, /^[A-Z0-9._%+\\-]+@[A-Z0-9.\\-]+\\.[A-Z]{2,4}$/i);\n\t        }\n\t    }, {\n\t        key: 'validateIp',\n\t        value: function validateIp(name, value) {\n\t            var segments = value.split('.');\n\t\n\t            if (segments.length === 4 && this.validateBetween(name, segments[0], [1, 255]) && this.validateBetween(name, segments[1], [0, 255]) && this.validateBetween(name, segments[2], [0, 255]) && this.validateBetween(name, segments[3], [1, 255])) {\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'validateUrl',\n\t        value: function validateUrl(name, value) {\n\t            return this.validateMatch(name, value, /^(https?|ftp):\\/\\/[^\\s\\/$.?#].[^\\s]*$/i);\n\t        }\n\t    }, {\n\t        key: 'validateAlpha',\n\t        value: function validateAlpha(name, value) {\n\t            return this.validateMatch(name, value, /^([a-z])+$/i);\n\t        }\n\t    }, {\n\t        key: 'validateAlphaNum',\n\t        value: function validateAlphaNum(name, value) {\n\t            return this.validateMatch(name, value, /^([a-z0-9])+$/i);\n\t        }\n\t    }, {\n\t        key: 'validateAlphaDash',\n\t        value: function validateAlphaDash(name, value) {\n\t            return this.validateMatch(name, value, /^([a-z0-9_\\-])+$/i);\n\t        }\n\t    }, {\n\t        key: 'validateBefore',\n\t        value: function validateBefore(name, value, params) {\n\t            this.requireParameterCount(1, params, 'before');\n\t\n\t            if (typeof value !== 'string' && typeof value !== 'number' && !(value instanceof Date)) {\n\t                return false;\n\t            }\n\t\n\t            var date = this.hasData(params[0]) ? this.getValue(params[0]) : params[0];\n\t\n\t            if (!this.validateDate(name, date)) {\n\t                console.error(params[0] + ' does not appear to be a date.');\n\t                return false;\n\t            }\n\t\n\t            return Date.parse(value) < Date.parse(date);\n\t        }\n\t    }, {\n\t        key: 'validateAfter',\n\t        value: function validateAfter(name, value, params) {\n\t            this.requireParameterCount(1, params, 'after');\n\t\n\t            if (typeof value !== 'string' && typeof value !== 'number' && !(value instanceof Date)) {\n\t                return false;\n\t            }\n\t\n\t            var date = this.hasData(params[0]) ? this.getValue(params[0]) : params[0];\n\t\n\t            if (!this.validateDate(name, date)) {\n\t                console.error(params[0] + ' does not appear to be a date.');\n\t                return false;\n\t            }\n\t\n\t            return Date.parse(value) > Date.parse(date);\n\t        }\n\t    }, {\n\t        key: 'validateDate',\n\t        value: function validateDate(name, value) {\n\t            if (value instanceof Date) {\n\t                return true;\n\t            }\n\t\n\t            if (typeof value !== 'string' && typeof value !== 'number') {\n\t                return false;\n\t            }\n\t\n\t            return !isNaN(Date.parse(value));\n\t        }\n\t    }, {\n\t        key: 'validateBoolean',\n\t        value: function validateBoolean(name, value) {\n\t            if (!this.hasData(name)) {\n\t                return true;\n\t            }\n\t\n\t            var acceptable = [true, false, 0, 1, '0', '1'];\n\t\n\t            return value === null || acceptable.indexOf(value) >= 0;\n\t        }\n\t    }, {\n\t        key: 'validateJson',\n\t        value: function validateJson(name, value) {\n\t            try {\n\t                JSON.parse(value);\n\t                return true;\n\t            } catch (err) {\n\t                return false;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dateRules',\n\t        get: function get() {\n\t            return ['Before', 'After', 'DateBetween'];\n\t        }\n\t    }, {\n\t        key: 'sizeRules',\n\t        get: function get() {\n\t            return ['Size', 'Between', 'Min', 'Max'];\n\t        }\n\t    }, {\n\t        key: 'numericRules',\n\t        get: function get() {\n\t            return ['Numeric', 'Integer'];\n\t        }\n\t    }, {\n\t        key: 'implicitRules',\n\t        get: function get() {\n\t            return ['Required', 'Filled', 'RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll', 'RequiredIf', 'RequiredUnless', 'Accepted', 'Present'];\n\t        }\n\t    }, {\n\t        key: 'dependentRules',\n\t        get: function get() {\n\t            return ['RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll', 'RequiredIf', 'RequiredUnless', 'Confirmed', 'Same', 'Different', 'Unique', 'Before', 'After'];\n\t        }\n\t    }], [{\n\t        key: 'make',\n\t        value: function make(data, rules) {\n\t            var customMessages = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\t\n\t            return new Validator(data, rules, customMessages);\n\t        }\n\t    }]);\n\t\n\t    return Validator;\n\t}();\n\t\n\texports.default = Validator;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _accepted$active_url$;\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\texports.default = (_accepted$active_url$ = {\n\t    \"accepted\": \"The :attr must be accepted.\",\n\t    \"active_url\": \"The :attr is not a valid URL.\",\n\t    \"after\": \"The :attr must be a date after :date.\",\n\t    \"alpha\": \"The :attr may only contain letters.\",\n\t    \"alpha_dash\": \"The :attr may only contain letters, numbers, and dashes.\",\n\t    \"alpha_num\": \"The :attr may only contain letters and numbers.\",\n\t    \"array\": \"The :attr must have selected elements.\",\n\t    \"before\": \"The :attr must be a date before :date.\",\n\t    \"between\": \"The :attr must be between :min - :max.\",\n\t    \"confirmed\": \"The :attr confirmation does not match.\",\n\t    \"count\": \"The :attr must have exactly :count selected elements.\",\n\t    \"countbetween\": \"The :attr must have between :min and :max selected elements.\",\n\t    \"countmax\": \"The :attr must have less than :max selected elements.\",\n\t    \"countmin\": \"The :attr must have at least :min selected elements.\",\n\t    \"date_between\": \"The :attr must be between :start and :end.\",\n\t    \"date_format\": \"The :attr must have a valid date format.\",\n\t    \"different\": \"The :attr and :other must be different.\",\n\t    \"digits\": \"The :attr must be :digits digits.\",\n\t    \"digits_between\": \"The :attr must be between :min and :max digits.\",\n\t    \"email\": \"The :attr format is invalid\",\n\t    \"integer\": \"The :attr must be an integer\",\n\t    \"exists\": \"The selected :attr is invalid.\",\n\t    \"greater_than\": \"The :attr must be > :value\",\n\t    \"less_than\": \"The :attr must be < :value\",\n\t    \"image\": \"The :attr must be an image.\",\n\t    \"in\": \"The selected :attr is invalid.\"\n\t}, _defineProperty(_accepted$active_url$, \"integer\", \"The :attr must be an integer.\"), _defineProperty(_accepted$active_url$, \"ip\", \"The :attr must be a valid IP address.\"), _defineProperty(_accepted$active_url$, \"match\", \"The :attr format is invalid.\"), _defineProperty(_accepted$active_url$, \"max\", \"The :attr must not exceed :max.\"), _defineProperty(_accepted$active_url$, \"min\", {\n\t    numeric: \"The :attr must be at least :min.\",\n\t    file: \"The :attr must be at least :min kilobytes.\",\n\t    string: \"The :attr must be at least :min characters\",\n\t    array: \"The :attr must have at least :min items.\"\n\t}), _defineProperty(_accepted$active_url$, \"not_in\", \"The selected :attr is invalid.\"), _defineProperty(_accepted$active_url$, \"numeric\", \"The :attr must be a number.\"), _defineProperty(_accepted$active_url$, \"regex\", \"The :attr format is invalid.\"), _defineProperty(_accepted$active_url$, \"required\", \"The :attr field is required.\"), _defineProperty(_accepted$active_url$, \"required_if\", \"The :attr field is required when :other is :value.\"), _defineProperty(_accepted$active_url$, \"required_with\", \"The :attr field is required when :values is present.\"), _defineProperty(_accepted$active_url$, \"required_without\", \"The :attr field is required when :values is not present.\"), _defineProperty(_accepted$active_url$, \"same\", \"The :attr and :other must match.\"), _defineProperty(_accepted$active_url$, \"size\", \"The :attr must be :size.\"), _defineProperty(_accepted$active_url$, \"unique\", \"The :attr has already been taken.\"), _defineProperty(_accepted$active_url$, \"url\", \"The :attr format is invalid.\"), _accepted$active_url$);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Replacers = function () {\n\t  function Replacers() {\n\t    _classCallCheck(this, Replacers);\n\t  }\n\t\n\t  _createClass(Replacers, null, [{\n\t    key: 'replaceMin',\n\t    value: function replaceMin(msg, attr, rule, params) {\n\t      return msg.replace(':min', params[0]);\n\t    }\n\t  }]);\n\t\n\t  return Replacers;\n\t}();\n\t\n\texports.default = Replacers;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** Validator.umd.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap afe4f9a3ea56cd658e66\n **/","import Messages from './Messages'\r\nimport Replacers from './Replacers'\r\n\r\nexport default class Validator {\r\n    constructor(data, rules, customMessages = []) {\r\n        this.data = data\r\n        this.rules = this.parseRules(rules)\r\n        this.errors = []\r\n        this.customMessages = customMessages\r\n    }\r\n\r\n    get dateRules() {\r\n        return ['Before', 'After', 'DateBetween']\r\n    }\r\n\r\n    get sizeRules() {\r\n        return ['Size', 'Between', 'Min', 'Max']\r\n    }\r\n\r\n    get numericRules() {\r\n        return ['Numeric', 'Integer']\r\n    }\r\n\r\n    get implicitRules() {\r\n        return [\r\n            'Required', 'Filled', 'RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll',\r\n            'RequiredIf', 'RequiredUnless', 'Accepted', 'Present',\r\n        ]\r\n    }\r\n\r\n    get dependentRules() {\r\n        return [\r\n            'RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll',\r\n            'RequiredIf', 'RequiredUnless', 'Confirmed', 'Same', 'Different', 'Unique',\r\n            'Before', 'After',\r\n        ]\r\n    }\r\n\r\n    static make(data, rules, customMessages = []) {\r\n        return new Validator(data, rules, customMessages)\r\n    }\r\n\r\n    isImplicit(rule) {\r\n        return this.implicitRules.indexOf(rule) > -1\r\n    }\r\n\r\n    hasData(name) {\r\n        return typeof(this.data[name]) !== 'undefined'\r\n    }\r\n\r\n    hasRule(name, rules) {\r\n        return this.getRule(name, rules) !== null\r\n    }\r\n\r\n    getRule(name, rulesToCheck) {\r\n        let a = this.rules.filter(function(item) {\r\n            return item.name === name\r\n        })\r\n\r\n        if (a.length === 0) {\r\n            return null\r\n        } else {\r\n            a = a[0]\r\n        }\r\n\r\n        if (! Array.isArray(rulesToCheck)) {\r\n            rulesToCheck = [rulesToCheck]\r\n        }\r\n\r\n        let b = a.rules.filter(function(rule) {\r\n            return rulesToCheck.indexOf(rule.name) >= 0\r\n        })\r\n\r\n        return b.length === 0 ? null : [ b[0].name, b[0].params ]\r\n    }\r\n\r\n    requireParameterCount(count, params, rule) {\r\n        if (params.length < count) {\r\n            throw new Error('Validation rule '+rule+' requires at least '+count+' parameters')\r\n        }\r\n    }\r\n\r\n    parseRules(rules) {\r\n        let self = this\r\n        let arr = []\r\n\r\n        rules.forEach(function(item) {\r\n            arr.push({\r\n                name: item.name,\r\n                rules: self.parseItemRules(item.rules)\r\n            })\r\n        })\r\n\r\n        return arr\r\n    }\r\n\r\n    parseItemRules(rule) {\r\n        let self = this\r\n        let arr = []\r\n\r\n        rule.split('|').forEach(function(ruleAndArgs) {\r\n            if (ruleAndArgs.trim()) {\r\n                let args = ruleAndArgs.split(':')\r\n                arr.push({\r\n                    name: self.titleCase(args[0], '_'),\r\n                    params: args[1] ? args[1].split(',') : []\r\n                })\r\n            }\r\n        })\r\n\r\n        return arr\r\n    }\r\n\r\n    titleCase(str, delimiter) {\r\n        delimiter = delimiter || ' '\r\n        return str.split(delimiter).map(function(item) {\r\n            return item[0].toUpperCase() + item.slice(1).toLowerCase()\r\n        }).join('')\r\n    }\r\n\r\n    snakeCase(str, delimiter) {\r\n        delimiter = delimiter || '_'\r\n        return str.replace(/(.)(?=[A-Z])/ug, '$1'+delimiter).toLowerCase()\r\n    }\r\n\r\n    getValue(name) {\r\n        if (typeof this.data[name] === 'undefined') {\r\n            return ''\r\n        }\r\n\r\n        return this.data[name]\r\n    }\r\n\r\n    passes() {\r\n        let self = this\r\n        let allValid = true\r\n        this.errors = []\r\n\r\n        this.rules.forEach(function(item) {\r\n            let name = item.name.toLowerCase()\r\n            item.rules.forEach(function(rule) {\r\n                let isValid = self.validate(name, rule)\r\n                allValid = allValid && isValid\r\n\r\n                if (!isValid) {\r\n                    // console.log(rule.name, rule.params + '** invalid')\r\n                    self.errors.push({\r\n                        name: name,\r\n                        rule: rule.name,\r\n                        message: self.getErrorMsg(name, rule)\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        return allValid\r\n    }\r\n\r\n    getErrorMsg(name, rule) {\r\n        let key = this.snakeCase(rule.name)\r\n        let msg = this.getMessage(name, rule)\r\n\r\n        return this.doReplacements(msg, name, rule)\r\n    }\r\n\r\n    getMessage(name, rule) {\r\n        let key = this.snakeCase(rule.name)\r\n        let msg = this.customMessages[name + '.' + key]\r\n\r\n        if (typeof(msg) !== 'undefined') {\r\n            return msg\r\n        }\r\n\r\n        // message might has sub-rule\r\n        if (typeof(msg) === 'object') {\r\n            let type = this.getDataType(name)\r\n            msg = Messages[key][type]\r\n        }\r\n\r\n        return typeof(msg) === 'undefined' ? '' : msg\r\n    }\r\n\r\n    getDataType(name) {\r\n        if (this.hasRule(name, this.numericRules)) {\r\n            return 'numeric'\r\n        } else if (this.hasRule(name, ['Array'])) {\r\n            return 'array'\r\n        }\r\n        /* SKIP file type */\r\n\r\n        return 'string'\r\n    }\r\n\r\n    doReplacements(msg, name, rule) {\r\n        if (msg.trim() === '') {\r\n            return ''\r\n        }\r\n\r\n        msg = msg.replace(':ATTR', name.toUpperCase())\r\n            .replace(':Attr', this.titleCase(name))\r\n            .replace(':attr', name)\r\n\r\n        // call replacer\r\n        let replacer = Replacers['replace' + rule.name]\r\n        if (typeof replacer === 'function') {\r\n            msg = replacer.apply(Replacers, [msg, name, rule.name, rule.params])\r\n        } else {\r\n            throw new Error(replacer + ' function does not exist.')\r\n        }\r\n\r\n        return msg\r\n    }\r\n\r\n    fails() {\r\n        return !this.passes()\r\n    }\r\n\r\n    hasError(name = null) {\r\n        if (name === null) {\r\n            return this.errors.length > 0\r\n        }\r\n\r\n        let errors = this.errors.filter(function(error) {\r\n            return error.name === name.toLowerCase()\r\n        })\r\n\r\n        return errors.length > 0\r\n    }\r\n\r\n    getErrors() {\r\n        return this.errors\r\n    }\r\n\r\n    validate(name, rule) {\r\n        let method = this['validate' + rule.name]\r\n        let value = this.getValue(name)\r\n\r\n        if (typeof method === 'function') {\r\n            return method.apply(this, [name, value, rule.params])\r\n        } else {\r\n            console.error('\"' + rule.name + '\" validation rule does not exist!')\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    /** Validation Rules **/\r\n\r\n    validateRequired(name, value, params) {\r\n        if (value === null) {\r\n            return false\r\n        } else if (typeof(value) === 'string' && value.trim() === '') {\r\n            return false\r\n        } else if (Array.isArray(value) && value.length < 1) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    validatePresent(name, value, params) {\r\n        return typeof(this.data[name]) !== 'undefined'\r\n    }\r\n\r\n    validateFilled(name, value) {\r\n        if (this.hasData(name)) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    anyFailingRequired(names) {\r\n        let self = this\r\n        let result = false\r\n\r\n        names.forEach(function(name) {\r\n            if (! self.validateRequired(name, self.getValue(name))) {\r\n                result = true\r\n                return\r\n            }\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    allFailingRequired(names) {\r\n        let self = this\r\n        let result = true\r\n\r\n        names.forEach(function(name) {\r\n            if (self.validateRequired(name, self.getValue(name))) {\r\n                result = false\r\n                return\r\n            }\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    validateRequiredWith(name, value, params) {\r\n        if (! this.allFailingRequired(params)) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    validateRequiredWithAll(name, value, params) {\r\n        if (! this.anyFailingRequired(params)) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    validateRequiredWithout(name, value, params) {\r\n        if (this.anyFailingRequired(params)) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    validateRequiredWithoutAll(name, value, params) {\r\n        if (this.allFailingRequired(params)) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    validateRequiredIf(name, value, params) {\r\n        this.requireParameterCount(2, params, 'required_if')\r\n\r\n        let data = this.getValue(params[0])\r\n        if (typeof(data) === 'boolean') {\r\n            data = data.toString()\r\n        }\r\n\r\n        let values = params.slice(1)\r\n\r\n        if (values.indexOf(data) >= 0) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    validateRequiredUnless(name, value, params) {\r\n        this.requireParameterCount(2, params, 'required_unless')\r\n\r\n        let data = this.getValue(params[0])\r\n\r\n        let values = params.slice(1)\r\n\r\n        if (values.indexOf(data) < 0) {\r\n            return this.validateRequired(name, value)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    getPresentCount(names) {\r\n        let self = this\r\n        let count = 0\r\n\r\n        names.forEach(function(name) {\r\n            if (typeof(self.data[name]) !== 'undefined') {\r\n                count++\r\n            }\r\n        })\r\n\r\n        return count\r\n    }\r\n\r\n    validateMatch(name, value, params) {\r\n        if (!(params instanceof Array)) {\r\n            params = [params];\r\n        }\r\n\r\n        if (!(value instanceof Array)) {\r\n            value = [value]\r\n        }\r\n\r\n        var re = params[0]\r\n\r\n        if (!(re instanceof RegExp)) {\r\n            re = re.split('/')\r\n            re = new RegExp(re[1], re[2])\r\n        }\r\n\r\n        return re.test(value)\r\n    }\r\n\r\n    validateRegex(name, value, params) {\r\n        return this.validateMatch(name, value, params);\r\n    }\r\n\r\n    validateAccepted(name, value) {\r\n        var acceptable = ['yes', 'on', '1', 1, true, 'true']\r\n\r\n        return this.validateRequired(name, value) && (acceptable.indexOf(value) >= 0)\r\n    }\r\n\r\n    validateArray(name, value) {\r\n        if (typeof(this.data[name]) === 'undefined') {\r\n            return true\r\n        }\r\n\r\n        return value === null || Array.isArray(value)\r\n    }\r\n\r\n    validateConfirmed(name, value) {\r\n        return this.validateSame(name, value, [name+'_confirmation'])\r\n    }\r\n\r\n    validateSame(name, value, params) {\r\n        this.requireParameterCount(1, params, 'same')\r\n\r\n        var other = this.data[params[0]]\r\n\r\n        return typeof(other) !== 'undefined' && value === other\r\n    }\r\n\r\n    validateDifferent(name, value, params) {\r\n        this.requireParameterCount(1, params, 'different')\r\n\r\n        var other = this.data[params[0]]\r\n\r\n        return typeof(other) !== 'undefined' && value !== other\r\n    }\r\n\r\n    validateDigits(name, value, params) {\r\n        this.requireParameterCount(1, params, 'digits')\r\n\r\n        return this.validateNumeric(name, value)\r\n            && value.toString().length == params[0]\r\n    }\r\n\r\n    validateDigitsBetween(name, value, params) {\r\n        this.requireParameterCount(2, params, 'digits_between')\r\n\r\n        var len = value.toString().length\r\n\r\n        return this.validateNumeric(name, value)\r\n            && len >= params[0] && len <= params[1]\r\n    }\r\n\r\n    validateSize(name, value, params) {\r\n        this.requireParameterCount(1, params, 'size')\r\n\r\n        return this.getSize(name, value) == params[0]\r\n    }\r\n\r\n    validateBetween(name, value, params) {\r\n        this.requireParameterCount(2, params, 'between')\r\n\r\n        var size = this.getSize(name, value)\r\n\r\n        return size >= params[0] && size <= params[1]\r\n    }\r\n\r\n    validateMin(name, value, params) {\r\n        this.requireParameterCount(1, params, 'min')\r\n\r\n        return this.getSize(name, value) >= params[0]\r\n    }\r\n\r\n    validateMax(name, value, params) {\r\n        this.requireParameterCount(1, params, 'max')\r\n\r\n        return this.getSize(name, value) <= params[0]\r\n    }\r\n\r\n    getSize(name, value) {\r\n        var hasNumeric = this.hasRule(name, this.numericRules)\r\n\r\n        if (hasNumeric && !isNaN(parseFloat(value))) {\r\n            return parseFloat(value)\r\n        }\r\n\r\n        // for array and string\r\n        return value.length\r\n    }\r\n\r\n    validateIn(name, value, params) {\r\n        if (Array.isArray(value) && this.hasRule(name, 'Array')) {\r\n            let arr = this.arrayDiff(value, params)\r\n            return arr.length === 0\r\n        }\r\n\r\n        return params.indexOf(value) >= 0\r\n    }\r\n\r\n    arrayDiff(arr1, arr2) {\r\n        let diff = []\r\n        arr1.forEach(function(item) {\r\n            if (arr2.indexOf(item) < 0) {\r\n                diff.push(item)\r\n            }\r\n        })\r\n        return diff\r\n    }\r\n\r\n    validateNotIn(name, value, params) {\r\n        this.requireParameterCount(1, params, 'not_in')\r\n\r\n        return ! this.validateIn(name, value, params)\r\n    }\r\n\r\n    validateNumeric(name, value) {\r\n        return this.validateMatch(name, value, /^-?\\d+(\\.\\d*)?$/)\r\n    }\r\n\r\n    validateInteger(name, value) {\r\n        return this.validateMatch(name, value, /^-?\\d+$/)\r\n    }\r\n\r\n    validateString(name, value) {\r\n        if (! this.hasData(name)) {\r\n            return true\r\n        }\r\n\r\n        return value === null || typeof(value) === 'string'\r\n    }\r\n\r\n    validateEmail(name, value) {\r\n        return this.validateMatch(name, value, /^[A-Z0-9._%+\\-]+@[A-Z0-9.\\-]+\\.[A-Z]{2,4}$/i)\r\n    }\r\n\r\n    validateIp(name, value) {\r\n        var segments = value.split('.')\r\n\r\n        if (segments.length === 4 &&\r\n                this.validateBetween(name, segments[0], [1, 255]) &&\r\n                this.validateBetween(name, segments[1], [0, 255]) &&\r\n                this.validateBetween(name, segments[2], [0, 255]) &&\r\n                this.validateBetween(name, segments[3], [1, 255])\r\n            ) {\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    validateUrl(name, value) {\r\n        return this.validateMatch(name, value, /^(https?|ftp):\\/\\/[^\\s\\/$.?#].[^\\s]*$/i)\r\n    }\r\n\r\n    validateAlpha(name, value) {\r\n        return this.validateMatch(name, value, /^([a-z])+$/i)\r\n    }\r\n\r\n    validateAlphaNum(name, value) {\r\n        return this.validateMatch(name, value, /^([a-z0-9])+$/i)\r\n    }\r\n\r\n    validateAlphaDash(name, value) {\r\n        return this.validateMatch(name, value, /^([a-z0-9_\\-])+$/i)\r\n    }\r\n\r\n    validateBefore(name, value, params) {\r\n        this.requireParameterCount(1, params, 'before')\r\n\r\n        if (typeof(value) !== 'string' && typeof(value) !== 'number' && !(value instanceof Date)) {\r\n            return false\r\n        }\r\n\r\n        let date = this.hasData(params[0]) ? this.getValue(params[0]) : params[0]\r\n\r\n        if( ! this.validateDate(name, date)) {\r\n            console.error(params[0] + ' does not appear to be a date.')\r\n            return false\r\n        }\r\n\r\n        return (Date.parse(value) < Date.parse(date))\r\n    }\r\n\r\n    validateAfter(name, value, params) {\r\n        this.requireParameterCount(1, params, 'after')\r\n\r\n        if (typeof(value) !== 'string' && typeof(value) !== 'number' && !(value instanceof Date)) {\r\n            return false\r\n        }\r\n\r\n        let date = this.hasData(params[0]) ? this.getValue(params[0]) : params[0]\r\n\r\n        if( ! this.validateDate(name, date)) {\r\n            console.error(params[0] + ' does not appear to be a date.')\r\n            return false\r\n        }\r\n\r\n        return (Date.parse(value) > Date.parse(date))\r\n    }\r\n\r\n    validateDate(name, value) {\r\n        if (value instanceof Date) {\r\n            return true\r\n        }\r\n\r\n        if (typeof(value) !== 'string' && typeof(value) !== 'number') {\r\n            return false\r\n        }\r\n\r\n        return ! isNaN(Date.parse(value))\r\n    }\r\n\r\n    validateBoolean(name, value) {\r\n        if (! this.hasData(name)) {\r\n            return true\r\n        }\r\n\r\n        let acceptable = [true, false, 0, 1, '0', '1']\r\n\r\n        return value === null || acceptable.indexOf(value) >= 0\r\n    }\r\n\r\n    validateJson(name, value) {\r\n        try {\r\n            JSON.parse(value)\r\n            return true\r\n        } catch(err) {\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Validator.js\n **/","export default {\r\n    \"accepted\"         : \"The :attr must be accepted.\",\r\n    \"active_url\"       : \"The :attr is not a valid URL.\",\r\n    \"after\"            : \"The :attr must be a date after :date.\",\r\n    \"alpha\"            : \"The :attr may only contain letters.\",\r\n    \"alpha_dash\"       : \"The :attr may only contain letters, numbers, and dashes.\",\r\n    \"alpha_num\"        : \"The :attr may only contain letters and numbers.\",\r\n    \"array\"            : \"The :attr must have selected elements.\",\r\n    \"before\"           : \"The :attr must be a date before :date.\",\r\n    \"between\"          : \"The :attr must be between :min - :max.\",\r\n    \"confirmed\"        : \"The :attr confirmation does not match.\",\r\n    \"count\"            : \"The :attr must have exactly :count selected elements.\",\r\n    \"countbetween\"     : \"The :attr must have between :min and :max selected elements.\",\r\n    \"countmax\"         : \"The :attr must have less than :max selected elements.\",\r\n    \"countmin\"         : \"The :attr must have at least :min selected elements.\",\r\n    \"date_between\"     : \"The :attr must be between :start and :end.\",\r\n    \"date_format\"      : \"The :attr must have a valid date format.\",\r\n    \"different\"        : \"The :attr and :other must be different.\",\r\n    \"digits\"           : \"The :attr must be :digits digits.\",\r\n    \"digits_between\"   : \"The :attr must be between :min and :max digits.\",\r\n    \"email\"            : \"The :attr format is invalid\",\r\n    \"integer\"          : \"The :attr must be an integer\",\r\n    \"exists\"           : \"The selected :attr is invalid.\",\r\n    \"greater_than\"     : \"The :attr must be > :value\",\r\n    \"less_than\"        : \"The :attr must be < :value\",\r\n    \"image\"            : \"The :attr must be an image.\",\r\n    \"in\"               : \"The selected :attr is invalid.\",\r\n    \"integer\"          : \"The :attr must be an integer.\",\r\n    \"ip\"               : \"The :attr must be a valid IP address.\",\r\n    \"match\"            : \"The :attr format is invalid.\",\r\n    \"max\"              : \"The :attr must not exceed :max.\",\r\n    \"min\"              : {\r\n        numeric : \"The :attr must be at least :min.\",\r\n        file    : \"The :attr must be at least :min kilobytes.\",\r\n        string  : \"The :attr must be at least :min characters\",\r\n        array   : \"The :attr must have at least :min items.\"\r\n    },\r\n    \"not_in\"           : \"The selected :attr is invalid.\",\r\n    \"numeric\"          : \"The :attr must be a number.\",\r\n    \"regex\"            : \"The :attr format is invalid.\",\r\n    \"required\"         : \"The :attr field is required.\",\r\n    \"required_if\"      : \"The :attr field is required when :other is :value.\",\r\n    \"required_with\"    : \"The :attr field is required when :values is present.\",\r\n    \"required_without\" : \"The :attr field is required when :values is not present.\",\r\n    \"same\"             : \"The :attr and :other must match.\",\r\n    \"size\"             : \"The :attr must be :size.\",\r\n    \"unique\"           : \"The :attr has already been taken.\",\r\n    \"url\"              : \"The :attr format is invalid.\"\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Messages.js\n **/","export default class Replacers {\r\n    static replaceMin(msg, attr, rule, params) {\r\n      return msg.replace(':min', params[0])\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Replacers.js\n **/"],"sourceRoot":""}