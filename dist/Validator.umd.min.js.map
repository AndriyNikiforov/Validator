{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Validator.umd.min.js","webpack:///webpack/bootstrap 08b6e1961f9470e3140d","webpack:///./src/Validator.js","webpack:///./src/Messages.js","webpack:///./src/Replacers.js","webpack:///./src/Rules.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Rules","_Rules2","_Messages","_Messages2","_Replacers","_Replacers2","Validator","data","rules","customMessages","arguments","undefined","parseRules","errors","validations","self","arr","forEach","item","push","name","parseEachRule","rule","split","ruleAndArgs","args","titleCase","params","str","delimiter","map","toUpperCase","slice","join","replace","toLowerCase","allValid","isValid","validate","message","getErrorMsg","snakeCase","msg","replacer","apply","passes","filter","error","method","getValue","_defineProperty","_accepted$active_url$","accepted","active_url","after","alpha","alpha_dash","alpha_num","array","before","between","confirmed","count","countbetween","countmax","countmin","date_between","date_format","different","digits","digits_between","email","integer","min","exists","greater_than","less_than","image","in","Replacers","attr","Rules","validator","dateRules","sizeRules","numericRules","implicitRules","dependentRules","indexOf","console","trim","Array","isArray","re","RegExp","match","validateMatch","validateSame","requireParameterCount","other","getSize","hasNumeric","hasRule","isNaN","parseInt","validateIn"],"mappings":"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","file":"Validator.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Validator\"] = factory();\n\telse\n\t\troot[\"Validator\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Validator\"] = factory();\n\telse\n\t\troot[\"Validator\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Rules = __webpack_require__(3);\n\t\n\tvar _Rules2 = _interopRequireDefault(_Rules);\n\t\n\tvar _Messages = __webpack_require__(1);\n\t\n\tvar _Messages2 = _interopRequireDefault(_Messages);\n\t\n\tvar _Replacers = __webpack_require__(2);\n\t\n\tvar _Replacers2 = _interopRequireDefault(_Replacers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Validator = function () {\n\t    function Validator(data, rules) {\n\t        var customMessages = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\t\n\t        _classCallCheck(this, Validator);\n\t\n\t        this.data = data;\n\t        this.rules = this.parseRules(rules);\n\t        this.errors = [];\n\t        this.customMessages = customMessages;\n\t        this.validations = new _Rules2.default(this);\n\t    }\n\t\n\t    _createClass(Validator, [{\n\t        key: 'getErrors',\n\t        value: function getErrors() {\n\t            return this.errors;\n\t        }\n\t    }, {\n\t        key: 'parseRules',\n\t        value: function parseRules(rules) {\n\t            var self = this;\n\t            var arr = [];\n\t\n\t            rules.forEach(function (item) {\n\t                arr.push({\n\t                    name: item.name,\n\t                    rules: self.parseEachRule(item.rules)\n\t                });\n\t            });\n\t\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: 'parseEachRule',\n\t        value: function parseEachRule(rule) {\n\t            var self = this;\n\t            var arr = [];\n\t\n\t            rule.split('|').forEach(function (ruleAndArgs) {\n\t                var args = ruleAndArgs.split(':');\n\t                arr.push({\n\t                    name: self.titleCase(args[0]),\n\t                    params: args[1] ? args[1].split(',') : []\n\t                });\n\t            });\n\t\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: 'titleCase',\n\t        value: function titleCase(str, delimiter) {\n\t            delimiter = delimiter || ' ';\n\t            return str.split(delimiter).map(function (item) {\n\t                return item[0].toUpperCase() + item.slice(1);\n\t            }).join('');\n\t        }\n\t    }, {\n\t        key: 'snakeCase',\n\t        value: function snakeCase(str, delimiter) {\n\t            delimiter = delimiter || '_';\n\t            return str.replace(/((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))(?=[A-Z])/, '$1' + delimiter).toLowerCase();\n\t        }\n\t    }, {\n\t        key: 'getValue',\n\t        value: function getValue(name) {\n\t            if (typeof this.data[name] === 'undefined') {\n\t                return '';\n\t            }\n\t\n\t            return this.data[name];\n\t        }\n\t    }, {\n\t        key: 'passes',\n\t        value: function passes() {\n\t            var self = this;\n\t            var allValid = true;\n\t            this.errors = [];\n\t\n\t            this.rules.forEach(function (item) {\n\t                var name = item.name.toLowerCase();\n\t                item.rules.forEach(function (rule) {\n\t                    var isValid = self.validate(name, rule);\n\t                    allValid = allValid && isValid;\n\t\n\t                    if (!isValid) {\n\t                        // console.log(rule.name, rule.params + '** invalid')\n\t                        self.errors.push({\n\t                            name: name,\n\t                            rule: rule.name,\n\t                            message: self.getErrorMsg(name, rule)\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t\n\t            return allValid;\n\t        }\n\t    }, {\n\t        key: 'getErrorMsg',\n\t        value: function getErrorMsg(name, rule) {\n\t            var self = this;\n\t            var key = self.snakeCase(rule.name);\n\t            var msg = self.customMessages[name + '.' + key];\n\t            msg = msg || _Messages2.default[key];\n\t            if (msg) {\n\t                msg = msg.replace(':ATTR', name.toUpperCase()).replace(':Attr', self.titleCase(name)).replace(':attr', name);\n\t            } else {\n\t                msg = '';\n\t            }\n\t\n\t            // call replacer\n\t            var replacer = _Replacers2.default['replace' + rule.name];\n\t            if (typeof replacer === 'function') {\n\t                msg = replacer.apply(_Replacers2.default, [msg, name, rule.name, rule.params]);\n\t            }\n\t\n\t            return msg;\n\t        }\n\t    }, {\n\t        key: 'fails',\n\t        value: function fails() {\n\t            return !this.passes();\n\t        }\n\t    }, {\n\t        key: 'hasError',\n\t        value: function hasError() {\n\t            var name = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t            if (name === null) {\n\t                return this.errors.length > 0;\n\t            }\n\t\n\t            var errors = this.errors.filter(function (error) {\n\t                return error.name === name.toLowerCase();\n\t            });\n\t\n\t            return errors.length > 0;\n\t        }\n\t    }, {\n\t        key: 'validate',\n\t        value: function validate(name, rule) {\n\t            var method = _Rules2.default['validate' + rule.name];\n\t            var value = this.getValue(name);\n\t\n\t            if (typeof method === 'function') {\n\t                return method.apply(_Rules2.default, [name, value, rule.params]);\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }], [{\n\t        key: 'make',\n\t        value: function make(data, rules) {\n\t            var customMessages = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\t\n\t            return new Validator(data, rules, customMessages);\n\t        }\n\t    }]);\n\t\n\t    return Validator;\n\t}();\n\t\n\texports.default = Validator;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _accepted$active_url$;\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\texports.default = (_accepted$active_url$ = {\n\t    \"accepted\": \"The :attr must be accepted.\",\n\t    \"active_url\": \"The :attr is not a valid URL.\",\n\t    \"after\": \"The :attr must be a date after :date.\",\n\t    \"alpha\": \"The :attr may only contain letters.\",\n\t    \"alpha_dash\": \"The :attr may only contain letters, numbers, and dashes.\",\n\t    \"alpha_num\": \"The :attr may only contain letters and numbers.\",\n\t    \"array\": \"The :attr must have selected elements.\",\n\t    \"before\": \"The :attr must be a date before :date.\",\n\t    \"between\": \"The :attr must be between :min - :max.\",\n\t    \"confirmed\": \"The :attr confirmation does not match.\",\n\t    \"count\": \"The :attr must have exactly :count selected elements.\",\n\t    \"countbetween\": \"The :attr must have between :min and :max selected elements.\",\n\t    \"countmax\": \"The :attr must have less than :max selected elements.\",\n\t    \"countmin\": \"The :attr must have at least :min selected elements.\",\n\t    \"date_between\": \"The :attr must be between :start and :end.\",\n\t    \"date_format\": \"The :attr must have a valid date format.\",\n\t    \"different\": \"The :attr and :other must be different.\",\n\t    \"digits\": \"The :attr must be :digits digits.\",\n\t    \"digits_between\": \"The :attr must be between :min and :max digits.\",\n\t    \"email\": \"The :attr format is invalid\",\n\t    \"integer\": \"The :attr must be an integer\",\n\t    \"min\": \"The :attr must be at least :min characters\",\n\t    \"exists\": \"The selected :attr is invalid.\",\n\t    \"greater_than\": \"The :attr must be > :value\",\n\t    \"less_than\": \"The :attr must be < :value\",\n\t    \"image\": \"The :attr must be an image.\",\n\t    \"in\": \"The selected :attr is invalid.\"\n\t}, _defineProperty(_accepted$active_url$, \"integer\", \"The :attr must be an integer.\"), _defineProperty(_accepted$active_url$, \"ip\", \"The :attr must be a valid IP address.\"), _defineProperty(_accepted$active_url$, \"match\", \"The :attr format is invalid.\"), _defineProperty(_accepted$active_url$, \"max\", \"The :attr must not exceed :max.\"), _defineProperty(_accepted$active_url$, \"not_in\", \"The selected :attr is invalid.\"), _defineProperty(_accepted$active_url$, \"numeric\", \"The :attr must be a number.\"), _defineProperty(_accepted$active_url$, \"regex\", \"The :attr format is invalid.\"), _defineProperty(_accepted$active_url$, \"required\", \"The :attr field is required.\"), _defineProperty(_accepted$active_url$, \"required_if\", \"The :attr field is required when :other is :value.\"), _defineProperty(_accepted$active_url$, \"required_with\", \"The :attr field is required when :values is present.\"), _defineProperty(_accepted$active_url$, \"required_without\", \"The :attr field is required when :values is not present.\"), _defineProperty(_accepted$active_url$, \"same\", \"The :attr and :other must match.\"), _defineProperty(_accepted$active_url$, \"size\", \"The :attr must be :size.\"), _defineProperty(_accepted$active_url$, \"unique\", \"The :attr has already been taken.\"), _defineProperty(_accepted$active_url$, \"url\", \"The :attr format is invalid.\"), _accepted$active_url$);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Replacers = function () {\n\t  function Replacers() {\n\t    _classCallCheck(this, Replacers);\n\t  }\n\t\n\t  _createClass(Replacers, null, [{\n\t    key: 'replaceMin',\n\t    value: function replaceMin(msg, attr, rule, params) {\n\t      return msg.replace(':min', params[0]);\n\t    }\n\t  }]);\n\t\n\t  return Replacers;\n\t}();\n\t\n\texports.default = Replacers;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Rules = function () {\n\t    function Rules() {\n\t        _classCallCheck(this, Rules);\n\t    }\n\t\n\t    _createClass(Rules, [{\n\t        key: 'constractor',\n\t        value: function constractor() {\n\t            this.validator = null;\n\t\n\t            this.dateRules = ['Before', 'After', 'DateBetween'];\n\t            this.sizeRules = ['Size', 'Between', 'Min', 'Max'];\n\t            this.numericRules = ['Numeric', 'Integer'];\n\t            this.implicitRules = ['Required', 'Filled', 'RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll', 'RequiredIf', 'RequiredUnless', 'Accepted', 'Present'];\n\t\n\t            this.dependentRules = ['RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll', 'RequiredIf', 'RequiredUnless', 'Confirmed', 'Same', 'Different', 'Unique', 'Before', 'After'];\n\t        }\n\t    }], [{\n\t        key: 'setValidator',\n\t        value: function setValidator(validator) {\n\t            this.validator = validator;\n\t        }\n\t    }, {\n\t        key: 'data',\n\t        value: function data(name) {\n\t            return this.validator.data[name];\n\t        }\n\t    }, {\n\t        key: 'isImplicit',\n\t        value: function isImplicit(rule) {\n\t            return this.implicitRules.indexOf(rule) > -1;\n\t        }\n\t    }, {\n\t        key: 'hasRule',\n\t        value: function hasRule(name, rules) {\n\t            return rules.indexOf(name) >= 0;\n\t        }\n\t    }, {\n\t        key: 'requireParameterCount',\n\t        value: function requireParameterCount(count, params, rule) {\n\t            if (params.length < count) {\n\t                console.error('Validation rule ' + rule + ' requires at least ' + count + ' parameters');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'validateRequired',\n\t        value: function validateRequired(name, value, params) {\n\t            if (value === null) {\n\t                return false;\n\t            } else if (typeof value === 'string' && value.trim() === '') {\n\t                return false;\n\t            } else if (Array.isArray(value) && value.length < 1) {\n\t                return false;\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'validatePresent',\n\t        value: function validatePresent(name, value, params) {\n\t            return this.data[name] !== 'undefined';\n\t        }\n\t    }, {\n\t        key: 'validateMatch',\n\t        value: function validateMatch(name, value, params) {\n\t            if (!(params instanceof Array)) {\n\t                params = [params];\n\t            }\n\t\n\t            if (!(value instanceof Array)) {\n\t                value = [value];\n\t            }\n\t\n\t            var i = 0;\n\t            var re = params[0];\n\t\n\t            if (!(re instanceof RegExp)) {\n\t                re = re.replace(/\\/?([^\\/]*)\\/?/, \"$1\");\n\t                re = new RegExp(re);\n\t            }\n\t\n\t            for (var i = 0; i < value.length; i++) {\n\t                if (value[i] !== null && value[i].match(re) !== null) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'validateRegex',\n\t        value: function validateRegex(name, value, params) {\n\t            return this.validateMatch(name, value, params);\n\t        }\n\t    }, {\n\t        key: 'validateConfirmed',\n\t        value: function validateConfirmed(name, value) {\n\t            return this.validateSame(name, value, [name + '_confirmation']);\n\t        }\n\t    }, {\n\t        key: 'validateSame',\n\t        value: function validateSame(name, value, params) {\n\t            this.requireParameterCount(1, params, 'same');\n\t\n\t            var other = this.data[params[0]];\n\t\n\t            return typeof other !== 'undefined' && value === other;\n\t        }\n\t    }, {\n\t        key: 'validateDifferent',\n\t        value: function validateDifferent(name, value, params) {\n\t            this.requireParameterCount(1, params, 'different');\n\t\n\t            var other = this.data[params[0]];\n\t\n\t            return typeof other !== 'undefined' && value !== other;\n\t        }\n\t    }, {\n\t        key: 'validateMin',\n\t        value: function validateMin(name, value, params) {\n\t            this.requireParameterCount(1, params, 'min');\n\t\n\t            return this.getSize(name, value) >= params[0];\n\t        }\n\t    }, {\n\t        key: 'validateMax',\n\t        value: function validateMax(name, value, params) {\n\t            this.requireParameterCount(1, params, 'max');\n\t\n\t            return this.getSize(name, value) <= params[0];\n\t        }\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize(name, value) {\n\t            var hasNumeric = this.hasRule(name, this.numericRules);\n\t\n\t            if (hasNumeric && !isNaN(parseInt(value))) {\n\t                return value;\n\t            }\n\t\n\t            // for array and string\n\t            return value.length;\n\t        }\n\t    }, {\n\t        key: 'validateIn',\n\t        value: function validateIn(name, value, params) {\n\t            var arr = params[0].split(',');\n\t\n\t            return arr.indexOf(value) >= 0;\n\t        }\n\t    }, {\n\t        key: 'validateNotIn',\n\t        value: function validateNotIn(name, value, params) {\n\t            return !this.validateIn(name, value, params);\n\t        }\n\t    }, {\n\t        key: 'validateNumeric',\n\t        value: function validateNumeric(name, value) {\n\t            var params = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t            return this.validateMatch(name, value, /^-?\\d+(\\.\\d*)?$/);\n\t        }\n\t    }, {\n\t        key: 'validateInteger',\n\t        value: function validateInteger(name, value) {\n\t            var params = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t            return this.validateMatch(name, value, /^-?\\d+$/);\n\t        }\n\t    }, {\n\t        key: 'validateEmail',\n\t        value: function validateEmail(name, value) {\n\t            var params = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t            return this.validateMatch(name, value, /^[A-Z0-9._%+\\-]+@[A-Z0-9.\\-]+\\.[A-Z]{2,4}$/i);\n\t        }\n\t    }]);\n\t\n\t    return Rules;\n\t}();\n\t\n\texports.default = Rules;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** Validator.umd.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 08b6e1961f9470e3140d\n **/","import Validations from './Rules'\r\nimport Messages from './Messages'\r\nimport Replacers from './Replacers'\r\n\r\nexport default class Validator {\r\n    constructor(data, rules, customMessages = []) {\r\n        this.data = data\r\n        this.rules = this.parseRules(rules)\r\n        this.errors = []\r\n        this.customMessages = customMessages\r\n        this.validations = new Validations(this)\r\n    }\r\n\r\n    static make(data, rules, customMessages = []) {\r\n        return new Validator(data, rules, customMessages)\r\n    }\r\n\r\n    getErrors() {\r\n        return this.errors\r\n    }\r\n\r\n    parseRules(rules) {\r\n        let self = this\r\n        let arr = []\r\n\r\n        rules.forEach(function(item) {\r\n            arr.push({\r\n                name: item.name,\r\n                rules: self.parseEachRule(item.rules)\r\n            })\r\n        })\r\n\r\n        return arr\r\n    }\r\n\r\n    parseEachRule(rule) {\r\n        let self = this\r\n        let arr = []\r\n\r\n        rule.split('|').forEach(function(ruleAndArgs) {\r\n            let args = ruleAndArgs.split(':')\r\n            arr.push({\r\n                name: self.titleCase(args[0]),\r\n                params: args[1] ? args[1].split(',') : []\r\n            })\r\n        })\r\n\r\n        return arr\r\n    }\r\n\r\n    titleCase(str, delimiter) {\r\n        delimiter = delimiter || ' '\r\n        return str.split(delimiter).map(function(item) {\r\n            return item[0].toUpperCase() + item.slice(1)\r\n        }).join('')\r\n    }\r\n\r\n    snakeCase(str, delimiter) {\r\n        delimiter = delimiter || '_'\r\n        return str.replace(/(.)(?=[A-Z])/u, '$1'+delimiter).toLowerCase()\r\n    }\r\n\r\n    getValue(name) {\r\n        if (typeof this.data[name] === 'undefined') {\r\n            return ''\r\n        }\r\n\r\n        return this.data[name]\r\n    }\r\n\r\n    passes() {\r\n        let self = this\r\n        let allValid = true\r\n        this.errors = []\r\n\r\n        this.rules.forEach(function(item) {\r\n            let name = item.name.toLowerCase()\r\n            item.rules.forEach(function(rule) {\r\n                let isValid = self.validate(name, rule)\r\n                allValid = allValid && isValid\r\n\r\n                if (!isValid) {\r\n                    // console.log(rule.name, rule.params + '** invalid')\r\n                    self.errors.push({\r\n                        name: name,\r\n                        rule: rule.name,\r\n                        message: self.getErrorMsg(name, rule)\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        return allValid\r\n    }\r\n\r\n    getErrorMsg(name, rule) {\r\n        let self = this\r\n        let key = self.snakeCase(rule.name)\r\n        let msg = self.customMessages[name + '.' + key]\r\n        msg = msg || Messages[key]\r\n        if (msg) {\r\n            msg = msg.replace(':ATTR', name.toUpperCase())\r\n                .replace(':Attr', self.titleCase(name))\r\n                .replace(':attr', name)\r\n        } else {\r\n            msg = ''\r\n        }\r\n\r\n        // call replacer\r\n        let replacer = Replacers['replace' + rule.name]\r\n        if (typeof replacer === 'function') {\r\n            msg = replacer.apply(Replacers, [msg, name, rule.name, rule.params])\r\n        }\r\n\r\n        return msg\r\n    }\r\n\r\n    fails() {\r\n        return !this.passes()\r\n    }\r\n\r\n    hasError(name = null) {\r\n        if (name === null) {\r\n            return this.errors.length > 0\r\n        }\r\n\r\n        let errors = this.errors.filter(function(error) {\r\n            return error.name === name.toLowerCase()\r\n        })\r\n\r\n        return errors.length > 0\r\n    }\r\n\r\n    validate(name, rule) {\r\n        let method = Validations['validate' + rule.name]\r\n        let value = this.getValue(name)\r\n\r\n        if (typeof method === 'function') {\r\n            return method.apply(Validations, [name, value, rule.params])\r\n        }\r\n\r\n        return false\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Validator.js\n **/","export default {\r\n    \"accepted\"         : \"The :attr must be accepted.\",\r\n    \"active_url\"       : \"The :attr is not a valid URL.\",\r\n    \"after\"            : \"The :attr must be a date after :date.\",\r\n    \"alpha\"            : \"The :attr may only contain letters.\",\r\n    \"alpha_dash\"       : \"The :attr may only contain letters, numbers, and dashes.\",\r\n    \"alpha_num\"        : \"The :attr may only contain letters and numbers.\",\r\n    \"array\"            : \"The :attr must have selected elements.\",\r\n    \"before\"           : \"The :attr must be a date before :date.\",\r\n    \"between\"          : \"The :attr must be between :min - :max.\",\r\n    \"confirmed\"        : \"The :attr confirmation does not match.\",\r\n    \"count\"            : \"The :attr must have exactly :count selected elements.\",\r\n    \"countbetween\"     : \"The :attr must have between :min and :max selected elements.\",\r\n    \"countmax\"         : \"The :attr must have less than :max selected elements.\",\r\n    \"countmin\"         : \"The :attr must have at least :min selected elements.\",\r\n    \"date_between\"     : \"The :attr must be between :start and :end.\",\r\n    \"date_format\"      : \"The :attr must have a valid date format.\",\r\n    \"different\"        : \"The :attr and :other must be different.\",\r\n    \"digits\"           : \"The :attr must be :digits digits.\",\r\n    \"digits_between\"   : \"The :attr must be between :min and :max digits.\",\r\n    \"email\"            : \"The :attr format is invalid\",\r\n    \"integer\"          : \"The :attr must be an integer\",\r\n    \"min\"              : \"The :attr must be at least :min characters\",\r\n    \"exists\"           : \"The selected :attr is invalid.\",\r\n    \"greater_than\"     : \"The :attr must be > :value\",\r\n    \"less_than\"        : \"The :attr must be < :value\",\r\n    \"image\"            : \"The :attr must be an image.\",\r\n    \"in\"               : \"The selected :attr is invalid.\",\r\n    \"integer\"          : \"The :attr must be an integer.\",\r\n    \"ip\"               : \"The :attr must be a valid IP address.\",\r\n    \"match\"            : \"The :attr format is invalid.\",\r\n    \"max\"              : \"The :attr must not exceed :max.\",\r\n    \"not_in\"           : \"The selected :attr is invalid.\",\r\n    \"numeric\"          : \"The :attr must be a number.\",\r\n    \"regex\"            : \"The :attr format is invalid.\",\r\n    \"required\"         : \"The :attr field is required.\",\r\n    \"required_if\"      : \"The :attr field is required when :other is :value.\",\r\n    \"required_with\"    : \"The :attr field is required when :values is present.\",\r\n    \"required_without\" : \"The :attr field is required when :values is not present.\",\r\n    \"same\"             : \"The :attr and :other must match.\",\r\n    \"size\"             : \"The :attr must be :size.\",\r\n    \"unique\"           : \"The :attr has already been taken.\",\r\n    \"url\"              : \"The :attr format is invalid.\"\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Messages.js\n **/","export default class Replacers {\r\n    static replaceMin(msg, attr, rule, params) {\r\n      return msg.replace(':min', params[0])\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Replacers.js\n **/","export default class Rules {\r\n    constractor() {\r\n        this.validator = null\r\n\r\n        this.dateRules = ['Before', 'After', 'DateBetween']\r\n        this.sizeRules = ['Size', 'Between', 'Min', 'Max']\r\n        this.numericRules = ['Numeric', 'Integer']\r\n        this.implicitRules = [\r\n            'Required', 'Filled', 'RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll',\r\n            'RequiredIf', 'RequiredUnless', 'Accepted', 'Present',\r\n        ]\r\n\r\n        this.dependentRules = [\r\n            'RequiredWith', 'RequiredWithAll', 'RequiredWithout', 'RequiredWithoutAll',\r\n            'RequiredIf', 'RequiredUnless', 'Confirmed', 'Same', 'Different', 'Unique',\r\n            'Before', 'After',\r\n        ]\r\n    }\r\n\r\n    static setValidator(validator) {\r\n        this.validator = validator\r\n    }\r\n\r\n    static data(name) {\r\n        return this.validator.data[name]\r\n    }\r\n\r\n    static isImplicit(rule) {\r\n        return this.implicitRules.indexOf(rule) > -1\r\n    }\r\n\r\n    static hasRule(name, rules) {\r\n        return rules.indexOf(name) >= 0\r\n    }\r\n\r\n    static requireParameterCount(count, params, rule) {\r\n        if (params.length < count) {\r\n            console.error('Validation rule '+rule+' requires at least '+count+' parameters')\r\n        }\r\n    }\r\n\r\n    static validateRequired(name, value, params) {\r\n        if (value === null) {\r\n            return false\r\n        } else if (typeof(value) === 'string' && value.trim() === '') {\r\n            return false\r\n        } else if (Array.isArray(value) && value.length < 1) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    static validatePresent(name, value, params) {\r\n        return this.data[name] !== 'undefined'\r\n    }\r\n\r\n    static validateMatch(name, value, params) {\r\n        if (!(params instanceof Array)) {\r\n            params = [params];\r\n        }\r\n\r\n        if (!(value instanceof Array)) {\r\n            value = [value]\r\n        }\r\n\r\n        var i = 0\r\n        var re = params[0]\r\n\r\n        if (!(re instanceof RegExp)) {\r\n            re = re.replace(/\\/?([^\\/]*)\\/?/, \"$1\");\r\n            re = new RegExp(re);\r\n        }\r\n\r\n        for (var i = 0; i < value.length; i++) {\r\n            if (value[i] !== null && value[i].match(re) !== null) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    static validateRegex(name, value, params) {\r\n        return this.validateMatch(name, value, params);\r\n    }\r\n\r\n    static validateConfirmed(name, value) {\r\n        return this.validateSame(name, value, [name+'_confirmation'])\r\n    }\r\n\r\n    static validateSame(name, value, params) {\r\n        this.requireParameterCount(1, params, 'same')\r\n\r\n        var other = this.data[params[0]]\r\n\r\n        return typeof(other) !== 'undefined' && value === other\r\n    }\r\n\r\n    static validateDifferent(name, value, params) {\r\n        this.requireParameterCount(1, params, 'different')\r\n\r\n        var other = this.data[params[0]]\r\n\r\n        return typeof(other) !== 'undefined' && value !== other\r\n    }\r\n\r\n    static validateMin(name, value, params) {\r\n        this.requireParameterCount(1, params, 'min')\r\n\r\n        return this.getSize(name, value) >= params[0]\r\n    }\r\n\r\n    static validateMax(name, value, params) {\r\n        this.requireParameterCount(1, params, 'max')\r\n\r\n        return this.getSize(name, value) <= params[0]\r\n    }\r\n\r\n    static getSize(name, value) {\r\n        var hasNumeric = this.hasRule(name, this.numericRules)\r\n\r\n        if (hasNumeric && !isNaN(parseInt(value))) {\r\n            return value\r\n        }\r\n\r\n        // for array and string\r\n        return value.length\r\n    }\r\n\r\n    static validateIn(name, value, params) {\r\n        var arr = params[0].split(',')\r\n\r\n        return arr.indexOf(value) >= 0\r\n    }\r\n\r\n    static validateNotIn(name, value, params) {\r\n        return ! this.validateIn(name, value, params)\r\n    }\r\n\r\n    static validateNumeric(name, value, params = null) {\r\n        return this.validateMatch(name, value, /^-?\\d+(\\.\\d*)?$/)\r\n    }\r\n\r\n    static validateInteger(name, value, params = null) {\r\n        return this.validateMatch(name, value, /^-?\\d+$/)\r\n    }\r\n\r\n    static validateEmail(name, value, params = null) {\r\n        return this.validateMatch(name, value, /^[A-Z0-9._%+\\-]+@[A-Z0-9.\\-]+\\.[A-Z]{2,4}$/i)\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Rules.js\n **/"],"sourceRoot":""}